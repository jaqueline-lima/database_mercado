--Jaqueline Bachião de Lima Pereira -Relacionamentos, selects, views e procedures
--Ricardo Henrique Bachião de Lima -Triggers
--Vinícius Marques Bertholdi -Criação e preenchimento das tabelas
--Banco de Dados II - Turma B


 -- Criação e uso da databases

CREATE DATABASE MERCADO;

USE MERCADO;

--Criação das tabelas
CREATE TABLE ESTADOS
(
  ID_ESTADO INT PRIMARY KEY IDENTITY (1,1) NOT NULL,
  SIGLA CHAR(2),
  NOME_ESTADO VARCHAR(30)
);

CREATE TABLE FILIAL
(
  ID_FILIAL INT PRIMARY KEY IDENTITY (1,1) NOT NULL,
  NOME_FILIAL VARCHAR(50) NOT NULL,
  FILIAL_ATIVA BIT,
  CNPJ_FILIAL VARCHAR(14) NOT NULL,
  NOME_GERENTE VARCHAR(50),
  NUMERO_FILIAL VARCHAR(11) NOT NULL,
  CIDADE_FILIAL VARCHAR(50) NOT NULL,
  FK_ESTADO_FILIAL INT ,
  RUA_FILIAL VARCHAR(30),
  NUMERO_RESIDENCIAL_FILIAL INT,
  CONSTRAINT FILIAL_ESTADO FOREIGN KEY (FK_ESTADO_FILIAL) REFERENCES ESTADOS (ID_ESTADO)
);

CREATE TABLE CLIENTE
(
  ID_CLIENTE INT PRIMARY KEY IDENTITY (1,1) NOT NULL,
  NOME_CLIENTE VARCHAR(50) NOT NULL,
  RUA_CLIENTE VARCHAR(50) NOT NULL,
  CIDADE_CLIENTE VARCHAR(50) NOT NULL,
  FK_ESTADO_CLIENTE INT NOT NULL,
  NUMERO_RESIDENCIAL_CLIENTE INT NOT NULL,
  FK_FILIAL INT NOT NULL,
  CONSTRAINT CLIENTE_ESTADO FOREIGN KEY (FK_ESTADO_CLIENTE) REFERENCES ESTADOS (ID_ESTADO),
  CONSTRAINT CLIENTE_FILIAL FOREIGN KEY (FK_FILIAL) REFERENCES FILIAL (ID_FILIAL)
);

CREATE TABLE PRODUTO
(
  ID_PRODUTO INT PRIMARY KEY IDENTITY (1,1) NOT NULL,
  NOME_PRODUTO VARCHAR (50) NOT NULL,
  VENCIMENTO DATE,
  CFOP INT,
  CSOSN INT,
  CEST INT,
  NCM INT,
  CODIGO_DE_BARRAS VARCHAR(11),
  VALOR_CUSTO MONEY,
  VALOR_VENDA MONEY,
  ATIVO BIT
);

CREATE TABLE VENDAS
(
  ID_VENDA INT PRIMARY KEY IDENTITY (1,1) NOT NULL,
  HORARIO FLOAT(4),
  DIA DATE,
  VALOR_TOTAL MONEY,
  CHAVE_NFCE VARCHAR(44),
  FK_CLIENTE INT,
  FK_FILIALVENDA INT
  CONSTRAINT VENDA_CLIENTE FOREIGN KEY (FK_CLIENTE) REFERENCES CLIENTE (ID_CLIENTE),
  CONSTRAINT VENDA_FILIAL FOREIGN KEY (FK_FILIALVENDA) REFERENCES FILIAL (ID_FILIAL)
);

CREATE TABLE PRODUTO_SAIDA
(
  ID_PRODUTO_SAIDA INT PRIMARY KEY IDENTITY (1,1) NOT NULL,
  FK_PRODUTO INT,
  FK_VENDA INT,
  QUANT_PRODUTO INT,
  CONSTRAINT PRODUTO_SAIDA_PRODUTO FOREIGN KEY (FK_PRODUTO) REFERENCES PRODUTO (ID_PRODUTO),
  CONSTRAINT SAIDA_VENDA FOREIGN KEY (FK_VENDA) REFERENCES VENDAS (ID_VENDA)
);

CREATE TABLE ESTOQUE
(
  ID_ESTOQUE INT PRIMARY KEY IDENTITY (1,1) NOT NULL,
  FK_PRODUTO INT,
  QUANTIDADE INT,
  FK_SAIDA INT,
  ENTRADA INT,
  CONSTRAINT ESTOQUE_SAIDA FOREIGN KEY (FK_SAIDA) REFERENCES PRODUTO_SAIDA (ID_PRODUTO_SAIDA),
  CONSTRAINT ESTOQUE_PRODUTO FOREIGN KEY (FK_PRODUTO) REFERENCES PRODUTO (ID_PRODUTO)
);

--INSERINDO ESTADOS

INSERT INTO ESTADOS
VALUES
  ('AL', 'Alagoas'),
  ('AP', 'Amapá'),
  ('AM', 'Amazonas'),
  ('BA', 'Bahia'),
  ('CE', 'Ceará'),
  ('DF', 'Distrito Federal'),
  ('ES', 'Espírito Santo'),
  ('GO', 'Goiás'),
  ('MA', 'Maranhão'),
  ('MT', 'Mato Grosso'),
  ('MS', 'Mato Grosso do Sul'),
  ('MG', 'Minas Gerais'),
  ('PA', 'Pará'),
  ('PB', 'Paraíba'),
  ('PR', 'Paraná'),
  ('PE', 'Pernambuco'),
  ('PI', 'Piauí'),
  ('RJ', 'Rio de Janeiro'),
  ('RN', 'Rio Grande do Norte'),
  ('RS', 'Rio Grande do Sul'),
  ('RO', 'Rondônia'),
  ('RR', 'Roraima'),
  ('SC', 'Santa Catarina'),
  ('SP', 'São Paulo'),
  ('SE', 'Sergipe'),
  ('TO', 'Tocantins');

SELECT *
FROM ESTADOS;

--INSERINDO FILIAL

INSERT INTO FILIAL
  (NOME_FILIAL, FILIAL_ATIVA, CNPJ_FILIAL, NOME_GERENTE, NUMERO_FILIAL, CIDADE_FILIAL, RUA_FILIAL, NUMERO_RESIDENCIAL_FILIAL)
VALUES
  ('FILIAL PASSOS', 0, '54324358000107', 'RICARDO ALMEIDA', '35998451241', 'PASSOS', 'RUA DAS ALAMEDAS', 20);

INSERT INTO FILIAL
VALUES
  ('FILIAL GUARDINHA', 1, '16678192000120', 'DOUGLAS MARCELO', '35845551289', 'GUARDINHA', 5, 'RUA INCRIVEL HULK', 300),
  ('FILIAL ALEMANHA', 1, '1115542000120', 'LUCAS MELO', '35811111289', 'ALEMOES', 13, 'RUA CAPITAO AMERICA', 400),
  ('FILIAL CONTANDO', 1, '16678192111120', 'DIANA FIGUEIREDO', '344441289', 'CONTAGEM', 26, 'RUA MULHER MARAVILHA', 255),
  ('FILIAL SAITAMA', 1, '16678135444120', 'HENRRIQUE CIBORG', '35745651547', 'ONE PUNCH', 23, 'RUA ACADEMY', 250);

SELECT *
FROM FILIAL;

--INSERINDO CLIENTES

INSERT INTO CLIENTE
VALUES
  ('RODRIGO ALVARO', 'JARDIM AMERICA', 'GUARDINHA', '5', 4565, 2),
  ('MILENA BARBOZA', 'JARDIM ALVORADA', 'ONE PUNCH', '23', 486, 5),
  ('ADEMIR FERREIRA', 'LETRINHAS', 'CONTAGEM', '3' , 5115, 4),
  ('BIANCA FAGUNDES', 'PASSO DE ELEFANTE', 'PASSOS', '1', 111, 1),
  ('MADALENA SILVA', 'RUA DOS ANTUNES', 'GUARDINHA', '5', 4895, 2);

SELECT *
FROM CLIENTE;

--INSERINDO PRODUTO

INSERT INTO PRODUTO
VALUES
  ('BOMBRIL', '10/05/2023', 5102, 0102, 212, 95059000, 11111111111, 2.00, 5.00, 1),
  ('DETERGENTE', '05/01/2023', 5102, 0102, 212, 95059000, 11111111111, 1.00, 6.00, 1),
  ('SABONETE', '11/01/2023', 5102, 0102, 212, 95059000, 11111111111, 0.20, 1.20, 1),
  ('BUCHA', '01/02/2023', 5102, 0102, 212, 95059000, 11111111111, 1.00, 3.50, 0),
  ('SHAMPOO', '6/05/2023', 5102, 0102, 212, 95059000, 11111111111, 5.00, 10.00, 1);

SELECT *
FROM PRODUTO;

--INSERINDO VENDA

INSERT INTO VENDAS
VALUES
  (1200 , '12/12/2022' , 10.00, 31221102187820000160650010000482331219, 5, 2),
  (1250 , '12/12/2022' , 100.00, 31221102187820000160650010000558941219, 4 , 1),
  (1200 , '12/12/2022' , 12.00, 31221102187820000160650010000482331219, 1 , 2);

SELECT *
FROM VENDAS;

--INSERINDO PRODUTO SAIDA

INSERT INTO PRODUTO_SAIDA
VALUES
  (1, 1, 2),
  (1, 1, 2),
  (5, 3, 10),
  (5, 3, 10),
  (5, 3, 10),
  (5, 3, 10),
  (5, 3, 10),
  (5, 3, 10),
  (5, 3, 10),
  (5, 3, 10),
  (5, 3, 10),
  (5, 3, 10),
  (5, 3, 10),
  (2, 2, 2),
  (2, 2, 2);

SELECT *
FROM PRODUTO_SAIDA;

--INSERINDO ESTOQUE

INSERT INTO ESTOQUE
VALUES
  (1, 200, 2, 200),
  (2, 250, 2, 250),
  (3, 100, 10, 100),
  (4, 150, 5, 150),
  (5, 300, 9, 300);

SELECT *
FROM ESTOQUE;

--SELECTS E DROPS DE TABELAS

SELECT *
FROM CLIENTE;
SELECT *
FROM ESTADOS;
SELECT *
FROM ESTOQUE;
SELECT *
FROM FILIAL;
SELECT *
FROM PRODUTO;
SELECT *
FROM PRODUTO_SAIDA;
SELECT *
FROM VENDAS;

DROP TABLE ESTOQUE;
DROP TABLE PRODUTO_SAIDA;
DROP TABLE PRODUTO;
DROP TABLE VENDAS;
DROP TABLE CLIENTE;
DROP TABLE FILIAL;
DROP TABLE ESTADOS;

--RELATÓRIOS DE PESQUISA, JUNÇÃO, UPDATES

SELECT *
FROM ESTADOS
WHERE SIGLA = 'MG';

UPDATE FILIAL SET FK_ESTADO_FILIAL = 12 WHERE NOME_FILIAL = 'FILIAL PASSOS';

SELECT NOME_PRODUTO
FROM PRODUTO AS P
  INNER JOIN PRODUTO_SAIDA AS PS
  ON P.ID_PRODUTO = PS.FK_PRODUTO;

SELECT NOME_PRODUTO
FROM PRODUTO AS P;

SELECT *
FROM PRODUTO_SAIDA;

SELECT ESTADOS.NOME_ESTADO, COUNT(CLIENTE.ID_CLIENTE) AS '# DE CLIENTES', COUNT(FILIAL.ID_FILIAL) AS '# DE FILIAIS'
FROM ESTADOS
LEFT JOIN CLIENTE
ON CLIENTE.FK_ESTADO_CLIENTE = ESTADOS.ID_ESTADO
LEFT JOIN FILIAL 
ON FILIAL.FK_ESTADO_FILIAL = ESTADOS.ID_ESTADO
GROUP BY ESTADOS.NOME_ESTADO
ORDER BY ESTADOS.NOME_ESTADO;

SELECT CLIENTE.NOME_CLIENTE, FILIAL.NOME_FILIAL
FROM VENDAS
INNER JOIN CLIENTE
ON CLIENTE.ID_CLIENTE = VENDAS.FK_CLIENTE
INNER JOIN FILIAL
ON VENDAS.FK_FILIALVENDA = FILIAL.ID_FILIAL;

SELECT PRODUTO.NOME_PRODUTO, SUM(PRODUTO_SAIDA.QUANT_PRODUTO) AS QUANTIDADE_SAIDA
FROM PRODUTO_SAIDA
INNER JOIN PRODUTO
ON PRODUTO_SAIDA.FK_PRODUTO = PRODUTO.ID_PRODUTO
GROUP BY PRODUTO.NOME_PRODUTO;

SELECT PRODUTO.NOME_PRODUTO, ESTOQUE.QUANTIDADE
FROM ESTOQUE
INNER JOIN PRODUTO
ON PRODUTO.ID_PRODUTO = ESTOQUE.FK_PRODUTO;

SELECT FILIAL.NOME_FILIAL, COUNT(CLIENTE.ID_CLIENTE) AS '# DE CLIENTES'
FROM FILIAL
INNER JOIN CLIENTE
ON CLIENTE.FK_FILIAL = FILIAL.ID_FILIAL
GROUP BY FILIAL.NOME_FILIAL;

--Criação de tabela de Arquivo Morto

CREATE TABLE ARQUIVO_MORTO_CLIENTE 
(
  ID_CLIENTE INT PRIMARY KEY NOT NULL,
  NOME_CLIENTE VARCHAR(50) NOT NULL,
  RUA_CLIENTE VARCHAR(50) NOT NULL,
  CIDADE_CLIENTE VARCHAR(50) NOT NULL,
  FK_ESTADO_CLIENTE INT NOT NULL,
  NUMERO_RESIDENCIAL_CLIENTE INT NOT NULL,
  FK_FILIAL INT NOT NULL
);

--Tabela com produtos fora do estoque
CREATE TABLE PRODUTO_MORTO
(
  ID_PRODUTO INT PRIMARY KEY NOT NULL,
  NOME_PRODUTO VARCHAR (50) NOT NULL,
  VENCIMENTO DATE,
  CFOP INT,
  CSOSN INT,
  CEST INT,
  NCM INT,
  CODIGO_DE_BARRAS VARCHAR(11),
  VALOR_CUSTO MONEY,
  VALOR_VENDA MONEY,
  ATIVO BIT
);

--Criação de VIEWS

USE MERCADO;

-- MOSTRA O NOME DA FILIAL, NOME DO GERENTE E ESTADO DA FILIAL
CREATE OR ALTER VIEW V_FILIAL 
AS SELECT FILIAL.NOME_FILIAL, FILIAL.NOME_GERENTE, ESTADOS.NOME_ESTADO
  FROM FILIAL
  INNER JOIN ESTADOS
  ON FILIAL.FK_ESTADO_FILIAL = ESTADOS.ID_ESTADO;

SELECT * FROM V_FILIAL;

--MOSTRA O NOME E ESTADO DO CLIENTE, O NOME E O NÚMERO DE TELEFONE DA FILIAL A QUAL O CLIENTE ESTÁ ASSOCIADO
CREATE OR ALTER VIEW V_CLIENTE 
AS SELECT CLIENTE.NOME_CLIENTE, ESTADOS.NOME_ESTADO, FILIAL.NOME_FILIAL, FILIAL.NUMERO_FILIAL
  FROM CLIENTE
  INNER JOIN ESTADOS
  ON CLIENTE.FK_ESTADO_CLIENTE = ESTADOS.ID_ESTADO
  INNER JOIN FILIAL
  ON CLIENTE.FK_FILIAL = FILIAL.ID_FILIAL;

SELECT * FROM V_CLIENTE;

--Criação de STORAGE PROCEDURES

USE MERCADO;

-- PROCEDURE PARA PESQUISAR CLIENTES POR NOME
CREATE OR ALTER PROCEDURE PROC_PESQUISA_CLIENTE
  @nome nvarchar(50)
AS
  SELECT NOME_CLIENTE, RUA_CLIENTE, NUMERO_RESIDENCIAL_CLIENTE
  FROM CLIENTE
  WHERE NOME_CLIENTE LIKE '%' + @nome + '%';

EXEC PROC_PESQUISA_CLIENTE @nome = 'RODRIGO';
GO

-- PROCEDURE PARA PESQUISAR PRODUTOS POR NOME
CREATE OR ALTER PROCEDURE PROC_PESQUISA_PRODUTO
  @nome nvarchar(50)
AS
  SELECT NOME_PRODUTO, VENCIMENTO, CODIGO_DE_BARRAS, VALOR_VENDA - VALOR_CUSTO AS LUCRO
  FROM PRODUTO
  WHERE NOME_PRODUTO LIKE '%' + @nome + '%';

EXEC PROC_PESQUISA_PRODUTO @nome = 'SH';

-- Criação de TRIGGERS

-- TRIGGER PARA DELETAR CLIENTE E ARMAZENAR OS CLIENTES DELETADOS NA TABELA DE ARQUIVO MORTO
CREATE TRIGGER TRG_DELETAR_CLIENTE
ON CLIENTE
FOR DELETE
AS
	INSERT INTO ARQUIVO_MORTO_CLIENTE (ID_CLIENTE, NOME_CLIENTE, RUA_CLIENTE, CIDADE_CLIENTE, FK_ESTADO_CLIENTE, NUMERO_RESIDENCIAL_CLIENTE, FK_FILIAL)
	SELECT ID_CLIENTE, NOME_CLIENTE, RUA_CLIENTE, CIDADE_CLIENTE, FK_ESTADO_CLIENTE, NUMERO_RESIDENCIAL_CLIENTE, FK_FILIAL
	FROM DELETED

DELETE CLIENTE WHERE ID_CLIENTE = 3;

SELECT * FROM CLIENTE;

SELECT * FROM ARQUIVO_MORTO_CLIENTE;

--TRIGGER DE DELETAR ESTOQUE
CREATE OR ALTER TRIGGER REPOR_ESTOQUE 
ON ESTOQUE
FOR DELETE
AS
	INSERT INTO ESTOQUE_MORTO (ID_ESTOQUE, FK_PRODUTO, QUANTIDADE, FK_SAIDA, ENTRADA)
	SELECT ID_ESTOQUE, FK_PRODUTO, QUANTIDADE, FK_SAIDA, ENTRADA
	FROM DELETED

SELECT * FROM ESTOQUE;

DELETE ESTOQUE WHERE ID_ESTOQUE = 5;

SELECT * FROM ESTOQUE_MORTO;

INSERT INTO ESTOQUE 
VALUES (5, 300, 9, 300);

-- TRIGGER DE REPOR PRODUTO
CREATE OR ALTER TRIGGER REPOR_PRODUTO
ON PRODUTO
FOR UPDATE
AS
	INSERT INTO PRODUTO_MORTO (ID_PRODUTO, NOME_PRODUTO, VENCIMENTO, CFOP, CSOSN, CEST, NCM, CODIGO_DE_BARRAS, VALOR_CUSTO, VALOR_VENDA, ATIVO)
	SELECT ID_PRODUTO, NOME_PRODUTO, VENCIMENTO, CFOP, CSOSN, CEST, NCM, CODIGO_DE_BARRAS, VALOR_CUSTO, VALOR_VENDA, ATIVO
	FROM PRODUTO WHERE ATIVO = 0;

SELECT * FROM PRODUTO_MORTO;

SELECT * FROM PRODUTO;

UPDATE PRODUTO SET ATIVO = 0 WHERE ID_PRODUTO = 4;
